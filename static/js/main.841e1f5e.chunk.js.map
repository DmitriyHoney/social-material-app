{"version":3,"sources":["components/common/Button/Button.module.scss","components/common/ButtonGhost/ButtonGhost.module.scss","components/Header/Header.module.scss","components/common/Logotype/Logotype.module.css","components/common/SmallAvatar/SmallAvatar.module.scss","components/common/SearchComponent/SearchComponent.module.scss","assets/images/prelodader.svg","components/Profile/SocialBlock/SocialBlock.module.scss","components/common/Paginator/Paginator.module.scss","components/Profile/ChangeProfile/EditProfileForm/EditProfileForm.module.css","components/LoginContainer/LoginForm/LoginForm.module.css","components/common/Button/Button.js","components/common/ButtonGhost/ButtonGhost.js","components/common/Logotype/Logotype.js","components/Header/Header.js","components/Sidebar/Sidebar.js","components/common/Paginator/Paginator.js","components/common/SmallAvatar/SmallAvatar.js","components/UsersContainer/UserList/UserList.js","components/common/SearchComponent/SearchComponent.js","components/common/FindByFilter/FindByFilter.js","components/common/Preloader/Preloader.js","components/UsersContainer/Users.jsx","api/api.js","Redux/users-reducer.js","utils/selectors.js","components/UsersContainer/UsersContainer.js","components/Dialogs/Dialogs.js","components/LargeAvatar/LargeAvatar.js","components/common/UserStatus/UserStatus.js","components/common/UserAbout/UserAbout.js","components/Profile/SocialBlock/SocialBlock.js","components/common/VerifyElem/VerifyElem.js","components/common/FormControls/FormControls.js","components/Profile/ChangeProfile/EditProfileForm/EditProfileForm.js","components/Profile/ChangeProfile/EditProfileCard.js","components/Profile/UserCard/UserCard.js","components/Profile/Profile.js","Redux/profile-reducers.js","hoc/withLoginRedirect.js","components/Profile/ProfileContainer.js","utils/validators.js","components/LoginContainer/LoginForm/LoginForm.js","Redux/auth-reducer.js","components/LoginContainer/LoginContainer.js","App.js","serviceWorker.js","Redux/redux-store.js","index.js","components/LargeAvatar/LargeAvatar.module.scss","components/Sidebar/Sidebar.module.scss","components/Profile/UserCard/UserCard.module.scss","assets/images/default-user.jpg","components/common/UserAbout/UserAbout.module.scss","components/common/VerifyElem/VerifyElem.module.scss","components/common/UserStatus/UserStatus.module.scss","components/common/FormControls/FormControls.module.css"],"names":["module","exports","Button","props","disabled","className","s","btn","value","btnGhost","Logotype","href","logo","Header","btnLog","isAuth","login","ButtonGhost","onClick","logoutThunkCallback","section","Sidebar","show","item","to","Paginator","useState","activePage","setActivePage","useEffect","classesForPagination","innerClass","activeClass","activeLinkClass","itemClass","itemClassFirst","itemClassPrev","itemClassNext","itemClassLast","disabledClass","linkClass","linkClassFirst","linkClassPrev","linkClassNext","linkClassLast","onChange","pageNumber","SmallAvatar","userUrl","id","src","defaultUserImg","alt","smAvatar","UserList","listOfUsers","users","map","oneUser","photos","name","status","followed","key","small","myId","userId","toggleFollow","usersProcessingSubscribe","some","elem","SearchComponent","refForInput","React","createRef","findUserState","findUser","setFindUser","searchWrap","placeholder","ref","e","inputText","target","setFindUserAC","current","FindByFilter","handleCheckbox","getFilterUsers","for","type","checked","propertiesFindByFilter","allUsers","onlyFriends","notFriends","Preloader","preloaderSVG","Users","allBtns","Number","Math","ceil","totalCount","countUsers","hideDisabled","totalItemsCount","pageRangeDisplayed","changeCurrentPage","setCurrentPageAC","inputSearch","searchPeople","usersPreloader","instance","axios","withCredentials","baseURL","headers","profileApi","get","newStatusText","put","formData","AboutMe","aboutMe","authApi","post","delete","usersApi","friend","SET_USERS","SET_TOTAL_COUNT","SET_CURRENT_PAGE","TOGGLE_USER_TO_STACK","SET_FIND_USER","SET_FRIEND_PROPERTY","TOGGLE_USERS_PRELOADER","initialState","items","uniqueUrlName","large","error","currentPage","plunkRadioObject","obj","localKey","String","setUsersFromApiAC","setTotalCountAC","newPageNumber","toggleSubscribeOnUserAC","toggleUserToStackSubscribe","bool","setFriendPropertyAC","toggleUsersPreloader","getUsersThunkCallback","dispatch","getState","a","usersPage","response","data","usersReducer","state","action","user","filter","getUserCard","profilePage","userCard","isInitialized","getUserStatus","userStatus","isUserCheck","getItsMe","itsMe","getAuthStateUserSelector","authPage","getCapthcaUrl","captchaUrl","getUsersList","getTotalCount","getCountUsers","getUsersProcessingSubscribe","getCurrentPage","UsersContainer","pageNum","toggleFollowThunkCallback","inputName","getFilterUsersThunkCallback","this","Component","compose","connect","getFollowStateResponse","resultCode","inpuntName","usersFilterObj","Dialogs","LargeAvatar","handleInput","setState","isPreload","files","length","setNewProfilePhoto","prevProps","prevState","snapshot","editBtn","overlay","wrapForInput","label","htmlFor","avatar","defaultUser","UserStatus","memo","editMode","setEditMode","statusText","setStatusText","onBlur","changeUserStatus","autoFocus","input","onDoubleClick","UserAbout","fullName","about","SocialBlock","socialList","result","i","push","getSocialArray","contacts","VerifyElem","text","verify","check","fail","createCustomField","meta","hasError","touched","formControl","CustomInput","CustomTextarea","ErrorWrap","listError","reduxForm","form","initialValues","vk","youtube","facebook","github","instagram","mainLink","twitter","website","onSubmit","handleSubmit","Field","component","EditProfileCard","currentElement","sendEditProfileData","then","editProfileWrap","UserCard","userData","lookingForAJob","lookingForAJobDescription","infoWrap","info","Profile","SET_USER_DATA","SET_INITIALIZED","SET_USER_STATUS","SET_UNKNOWN_USER","SET_NEW_PHOTOS","ITS_ME","setInitialized","setUserStatus","itsMeAC","getCurrentUserDataThunkCreator","currentUserId","userTechnicalData","resultId","dataFromApi","profileReducer","mapStateToProps","ProfileContainer","newStatus","setUserStatusThunkCreator","photoFile","setNewProfilePhotoThunkCallback","sendEditProfileDataThunkCallback","requestUserData","match","params","getUserStatusThunkCreator","console","log","FormData","append","messages","stopSubmit","_error","Promise","reject","RedirectComponent","withRouter","required","undefined","email","test","CaptchaElem","validate","TOGGLE_USER_AUTH","SET_LOGIN_USER_DATA","LOGOUT_USER","GET_CAPTCHA","initialized","setInitializeAC","getAuthUserThunkCallback","setUserLoginDataThunkCallback","message","responseCaptchaUrl","url","authReducer","LoginContainer","App","getInitializedStateThunkCallback","path","render","PureComponent","promise","all","Boolean","window","location","hostname","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.841e1f5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3AR_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnGhost\":\"ButtonGhost_btnGhost__1UWc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Header_section__2WCnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logotype_logo__2aaDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smAvatar\":\"SmallAvatar_smAvatar__3VOSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrap\":\"SearchComponent_searchWrap__34ZXC\"};","module.exports = __webpack_public_path__ + \"static/media/prelodader.3a6ebddb.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SocialBlock_section__QMjFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"innerClass\":\"Paginator_innerClass__zhdNd\",\"activeLinkClass\":\"Paginator_activeLinkClass__1apLF\",\"linkClass\":\"Paginator_linkClass__1aM3n\",\"linkClassNext\":\"Paginator_linkClassNext__2vqnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"EditProfileForm_error__2ZW_4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"LoginForm_error__3UGCf\"};","import React from 'react';\r\nimport s from './Button.module.scss';\r\n\r\nconst Button = props => {\r\n    return(\r\n        <div>\r\n            <button disabled={props.disabled} className={s.btn} {...props}>{props.value}</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport s from './ButtonGhost.module.scss';\r\n\r\nconst Button = props => {\r\n    return(\r\n        <div>\r\n            <button disabled={props.disabled} className={s.btnGhost} {...props}>{props.value}</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport s from './Logotype.module.css';\r\n\r\nconst Logotype = props => {\r\n    return(\r\n        <>\r\n            <a href=\"#\" className={s.logo}>Logotype</a>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Logotype;","import React from 'react';\r\nimport s from './Header.module.scss';\r\nimport Logotype from \"../common/Logotype/Logotype\";\r\nimport Button from \"../common/Button/Button\";\r\nimport ButtonGhost from \"../common/ButtonGhost/ButtonGhost\";\r\n\r\n\r\nconst Header = props => {\r\n    let handleLogoutBtn = () => {\r\n        props.logoutThunkCallback();\r\n    }\r\n    let btnLog = (\r\n        props.isAuth\r\n            && <div>{props.login}<ButtonGhost value={\"Logout\"} onClick={handleLogoutBtn}/></div>\r\n    );\r\n    return(\r\n        <header className={s.section}>\r\n            <Logotype />\r\n            {btnLog}\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Sidebar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = props => {\r\n    //props.show - меню расктытое или нет\r\n    if (props.show) {\r\n\r\n    } else {\r\n        return(\r\n            <div className={s.section}>\r\n                <ul>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/profile\">\r\n                            <i className='material-icons'>&#xe851;</i>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/dialogs\">\r\n                            <i className='material-icons'>&#xe0b7;</i>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/users\">\r\n                            <i className='material-icons'>&#xe0ba;</i>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default Sidebar;","import React, {useState, useEffect} from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\nimport s from './Paginator.module.scss';\r\n\r\n\r\nconst Paginator = props => {\r\n\r\n    const [activePage, setActivePage] = useState(props.activePage);\r\n\r\n    useEffect(() => {\r\n        setActivePage(props.activePage);\r\n    }, [props.activePage]);\r\n\r\n    let handlePageChange = pageNumber => {\r\n        setActivePage(pageNumber);\r\n        props.onChange(pageNumber)\r\n    }\r\n\r\n    let classesForPagination = {\r\n        innerClass: s.innerClass,\r\n        activeClass: s.activeClass,\r\n        activeLinkClass: s.activeLinkClass,\r\n        itemClass: s.itemClass,\r\n        itemClassFirst: s.itemClassFirst, \r\n        itemClassPrev: s.itemClassPrev,\r\n        itemClassNext: s.itemClassNext,\r\n        itemClassLast: s.itemClassLast, \r\n        disabledClass: s.disabledClass,\r\n        linkClass: s.linkClass,\r\n        linkClassFirst: s.linkClassFirst,\r\n        linkClassPrev: s.linkClassPrev,\r\n        linkClassNext: s.linkClassNext,\r\n        linkClassLast: s.linkClassLast\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Pagination\r\n                {...props}\r\n                activePage={activePage}\r\n                onChange={handlePageChange}\r\n                {...classesForPagination}\r\n            />\r\n        </div> \r\n    )\r\n\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport defaultUserImg from '../../../assets/images/default-user.jpg'\r\nimport s from './SmallAvatar.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst SmallAvatar = props => {\r\n    let userUrl = `/profile/${props.id}`;\r\n    return (\r\n        <NavLink to={userUrl}>\r\n            <img src={props.src || defaultUserImg} alt=\"user-avatar\" className={s.smAvatar}/>\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default SmallAvatar;","import React from 'react';\r\nimport Button from '../../common/Button/Button';\r\nimport s from './UserList.module.scss';\r\nimport SmallAvatar from '../../common/SmallAvatar/SmallAvatar';\r\n\r\n\r\nconst UserList = props => {\r\n    let listOfUsers = props.users.map(oneUser => {\r\n        let {id, photos, name, status, followed} = oneUser;\r\n        let toggleFollow = (userId) => {\r\n            props.toggleFollow(userId)\r\n        }\r\n\r\n        return(\r\n            <div key={id}>\r\n                <div>\r\n                    <SmallAvatar \r\n                        src={photos.small} \r\n                        id={id}\r\n                    />\r\n                    <h3>{name}</h3>\r\n                </div>\r\n                <p>\r\n                    {status || \"No status\"}\r\n                </p>\r\n                {props.myId !== id\r\n                    && (\r\n                        <Button \r\n                            value={followed ? \"Unfollow\" : \"Follow\"} \r\n                            onClick={() => toggleFollow(id)} \r\n                            disabled={props.usersProcessingSubscribe.some(elem => elem === id)}\r\n                        />\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    });\r\n\r\n    return <div>{listOfUsers}</div>\r\n};\r\n\r\nexport default UserList;","import React, {useEffect, useState} from 'react';\r\nimport s from './SearchComponent.module.scss';\r\nimport Button from '../Button/Button';\r\n\r\nconst SearchComponent = props => {\r\n    let refForInput = React.createRef();\r\n    const [findUser, setFindUser] = useState(props.findUserState);\r\n\r\n    useEffect(() => {\r\n        setFindUser(props.findUserState);\r\n    }, [props.findUserState]);\r\n\r\n    let handleButton = () => {\r\n        props.onClick(refForInput.current)\r\n    };\r\n    let handleResetBtn = (e) => {\r\n        props.setFindUserAC(\"\");\r\n        props.onClick();\r\n    };\r\n    let handleInput = (e) => {\r\n        let inputText = e.target.value;\r\n        props.setFindUserAC(inputText)\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <h3>Find by name</h3>\r\n            <div className={s.searchWrap}>\r\n                <input placeholder={\"Search\"} ref={refForInput} onChange={handleInput} value={findUser}/>\r\n                <Button value={\"Search\"} onClick={handleButton}/>\r\n                <Button value={\"Reset\"} onClick={handleResetBtn}/>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SearchComponent;","import React from 'react';\r\nimport s from './FindByFilter.module.scss';\r\nimport Button from '../Button/Button';\r\n\r\nconst FindByFilter = props => {\r\n    let handleCheckbox = e => {\r\n        props.getFilterUsers(e.target.name);\r\n    }\r\n    return(\r\n        <>\r\n            <div>\r\n                <div>\r\n                    <label for={\"allUsers\"}>All Users</label>\r\n                    <input \r\n                        type={\"radio\"} \r\n                        id={\"allUsers\"} \r\n                        name={\"allUsers\"} \r\n                        checked={props.propertiesFindByFilter.allUsers} \r\n                        onChange={handleCheckbox}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label for={\"onlyFriends\"}>Only Friends</label>\r\n                    <input \r\n                        type={\"radio\"} \r\n                        id={\"onlyFriends\"} \r\n                        name={\"onlyFriends\"} \r\n                        checked={props.propertiesFindByFilter.onlyFriends} \r\n                        onChange={handleCheckbox}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label for={\"notFriends\"}>Not Friends</label>\r\n                    <input \r\n                        type={\"radio\"} \r\n                        id={\"notFriends\"} \r\n                        name={\"notFriends\"} \r\n                        checked={props.propertiesFindByFilter.notFriends} \r\n                        onChange={handleCheckbox}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default FindByFilter;","import React from \"react\";\r\nimport preloaderSVG from \"./../../../assets/images/prelodader.svg\";\r\n\r\nconst Preloader = props => {\r\n    return (\r\n        <div>\r\n            <img src={preloaderSVG} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport UserList from './UserList/UserList';\r\nimport SearchComponent from '../common/SearchComponent/SearchComponent';\r\nimport FindByFilter from '../common/FindByFilter/FindByFilter';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\nconst Users = props => {\r\n    let changePageNumber = (pageNumber) => {\r\n        props.changeCurrentPage(pageNumber);\r\n    };\r\n\r\n    let handleSearchBtn = inputSearch => {\r\n        if (inputSearch) props.searchPeople(inputSearch.value);\r\n        props.searchPeople();\r\n    }\r\n\r\n    let allBtns = Number(Math.ceil(props.totalCount / props.countUsers) + \"0\");\r\n\r\n    return(\r\n        <div>\r\n            {allBtns > 10\r\n                && (\r\n                    <Paginator \r\n                        hideDisabled //скрыть неактивные\r\n                        totalItemsCount={allBtns} //Всего кнопок\r\n                        pageRangeDisplayed={5} //кол-во кнопок за раз\r\n                        onChange={changePageNumber} //Функция по клику на кнопку\r\n                        activePage={props.activePage}\r\n                        setCurrentPageAC={props.setCurrentPageAC}\r\n                    />\r\n                )\r\n            }\r\n            <SearchComponent \r\n                onClick={handleSearchBtn}\r\n                setFindUserAC={props.setFindUserAC}\r\n                findUserState={props.findUserState}\r\n            />\r\n            <FindByFilter \r\n                propertiesFindByFilter={props.propertiesFindByFilter}\r\n                getFilterUsers={props.getFilterUsers}\r\n            />\r\n            {props.usersPreloader \r\n                ? <Preloader />\r\n                : (\r\n                    <UserList \r\n                        myId={props.myId}\r\n                        users={props.users}\r\n                        toggleFollow={props.toggleFollow}\r\n                        usersProcessingSubscribe={props.usersProcessingSubscribe}\r\n                    />\r\n                )\r\n             }\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '2aa95529-03f3-4e18-bb22-995bc7fdf5db'\r\n    }\r\n});\r\n\r\nexport const profileApi = {\r\n    getUserData(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    setUserStatus(newStatusText) {\r\n        return instance.put(`profile/status`, {status: newStatusText})\r\n    },\r\n    setNewProfilePhoto(formData) {\r\n        return instance.put(`profile/photo`, formData,  {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n    },\r\n    setEditProfileData(formData) {\r\n        return instance.put(`profile`, {...formData, AboutMe: formData.aboutMe})\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const authApi = {\r\n    getAuthUser() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    setLoginUserData(formData) {\r\n        return instance.post(`auth/login`, {...formData})\r\n    },\r\n    logoutUser() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n    getCaptchaUrl() {\r\n        return instance.delete(`/security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n\r\nexport const usersApi = {\r\n    getUsersPage(pageNumber, countUsers = \"7\", friend = \"\", findUser = \"\") {\r\n        return instance.get(`users/?page=${pageNumber}&count=${countUsers}&friend=${friend}&term=${findUser}`)\r\n    },\r\n    getFollowStateOnUser(userId) {\r\n        return instance.get(`follow/${userId}`)\r\n    },\r\n    followOnUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unFollowOnUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n   \r\n}","import { usersApi } from \"../api/api\";\r\n\r\nconst SET_USERS                         = 'bank-app/users-reducer/SET_USERS';\r\nconst SET_TOTAL_COUNT                   = 'bank-app/users-reducer/SET_TOTAL_COUNT';\r\nconst SET_CURRENT_PAGE                  = 'bank-app/users-reducer/SET_CURRENT_PAGE';\r\nconst TOGGLE_SUBSCRIBE_ON_USER          = 'bank-app/users-reducer/TOGGLE_SUBSCRIBE_ON_USER';\r\nconst TOGGLE_USER_TO_STACK              = 'bank-app/users-reducer/ADD_USER_TO_STACK';\r\nconst SET_FIND_USER                     = 'bank-app/users-reducer/SET_FIND_USER';\r\nconst SET_PROPERTIES_BY_FILTER          = 'bank-app/users-reducer/SET_PROPERTIES_BY_FILTER';\r\nconst SET_FRIEND_PROPERTY               = 'bank-app/users-reducer/SET_FRIEND_PROPERTY';\r\nconst TOGGLE_USERS_PRELOADER               = 'bank-app/users-reducer/TOGGLE_USERS_PRELOADER';\r\n\r\nlet initialState = {\r\n    items: [\r\n        {\r\n            name: \"Дмитрий Большаков\",\r\n            id: 6722,\r\n            uniqueUrlName: null,\r\n            photos: {\r\n                small: \"https://social-network.samuraijs.com/activecontent/images/users/6722/user-small.jpg?v=1\",\r\n                large: \"https://social-network.samuraijs.com/activecontent/images/users/6722/user.jpg?v=1\"\r\n            },\r\n            status: \"Создать себя\",\r\n            followed: false\r\n        },\r\n        {\r\n            name: \"Дмитрий Дерид\",\r\n            id: 6639,\r\n            uniqueUrlName: null,\r\n            photos: {\r\n                small: \"https://social-network.samuraijs.com/activecontent/images/users/6639/user-small.jpg?v=1\",\r\n                large: \"https://social-network.samuraijs.com/activecontent/images/users/6639/user.jpg?v=1\"\r\n            },\r\n            status: \"Всем , привет!!!\",\r\n            followed: true\r\n        },\r\n    ],\r\n    totalCount: null, //Всего пользователей\r\n    error: null,\r\n    currentPage: 1, //Текущая страница\r\n    friend: \"\", //Отображать только друзей,\r\n    findUser: \"\", //Поиск по имени\r\n    countUsers: 7, //Кол-во пользователей на странице,\r\n    usersProcessingSubscribe: [], //Пользователи в процессе подписки (нажали подписаться и пока ждём ответа от серва этот пользователь добавлен в очередь)\r\n    propertiesFindByFilter: {\r\n        allUsers: true,\r\n        onlyFriends: false,\r\n        notFriends: false\r\n    },\r\n    usersPreloader: true\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                items: [...action.users]\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.newPageNumber\r\n            }\r\n        case TOGGLE_SUBSCRIBE_ON_USER:\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: !user.followed}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        case SET_FIND_USER:\r\n            return {\r\n                ...state,\r\n                findUser: action.findUser\r\n            }\r\n        case TOGGLE_USERS_PRELOADER:\r\n            return {\r\n                ...state,\r\n                usersPreloader: action.bool\r\n            }\r\n        case TOGGLE_USER_TO_STACK:\r\n            if (action.bool) {\r\n                return {\r\n                    ...state,\r\n                    usersProcessingSubscribe: [...state.usersProcessingSubscribe, action.userId] \r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                usersProcessingSubscribe: state.usersProcessingSubscribe.filter(id => id !== action.userId)\r\n            }\r\n        case SET_PROPERTIES_BY_FILTER:\r\n            return {\r\n                ...state,\r\n                propertiesFindByFilter: {...action.obj}\r\n            }\r\n        case SET_FRIEND_PROPERTY:\r\n            return {\r\n                ...state,\r\n                friend: action.value\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction plunkRadioObject(obj, key) { //iterateObj prop = true, another prop = false \r\n    for(let localKey in obj) {\r\n        if(String(localKey) === key) obj[localKey] = true;\r\n        else obj[localKey] = false;\r\n    }\r\n    return obj;\r\n}\r\n\r\n//ActionCreators\r\nexport const setUsersFromApiAC = users                      => ({type: SET_USERS, users});\r\nexport const setTotalCountAC = totalCount                   => ({type: SET_TOTAL_COUNT, totalCount});\r\nexport const setCurrentPageAC = newPageNumber               => ({type: SET_CURRENT_PAGE, newPageNumber});\r\nexport const toggleSubscribeOnUserAC = userId               => ({type: TOGGLE_SUBSCRIBE_ON_USER, userId}); //Подписывается или отписывается на пользователя\r\nexport const toggleUserToStackSubscribe = (userId, bool)    => ({type: TOGGLE_USER_TO_STACK, userId, bool}); //Добавить пользователя в очередь во время подписки или отписки\r\nexport const setFindUserAC = findUser                       => ({type: SET_FIND_USER, findUser}); \r\nexport const setPropertiesFindByFilterAC = obj              => ({type: SET_PROPERTIES_BY_FILTER, obj}); \r\nexport const setFriendPropertyAC = value                    => ({type: SET_FRIEND_PROPERTY, value}); \r\nexport const toggleUsersPreloader = bool                    => ({type: TOGGLE_USERS_PRELOADER, bool}); \r\n\r\n//ThunkCreators\r\nexport const getUsersThunkCallback = (pageNumber = 1) => async (dispatch, getState) => { //Получить пользователей\r\n    dispatch(toggleUsersPreloader(true));\r\n    let countUsers = getState().usersPage.countUsers; //Кол-во пользователей на странице\r\n    let friend = getState().usersPage.friend; //Ищем только друзей или только не друзей\r\n    let findUser = getState().usersPage.findUser; //Искомы пользователь\r\n    dispatch(setCurrentPageAC(pageNumber)) //Установили текущую страницу\r\n\r\n    let response = await usersApi.getUsersPage(pageNumber, countUsers, friend, findUser);\r\n    dispatch(toggleUsersPreloader(false));\r\n    \r\n    dispatch(setUsersFromApiAC(response.data.items)) //Установили пользователей в store\r\n    dispatch(setTotalCountAC(response.data.totalCount)); //Установили в store сколько всего пользователей\r\n};\r\n\r\n\r\nexport const toggleFollowThunkCallback = userId => async dispatch => { //Отписаться || Подписаться на пользователя\r\n    dispatch(toggleUserToStackSubscribe(userId, true)); //Добавлем пользователя в очередь на подписку\r\n    let getFollowStateResponse  = await usersApi.getFollowStateOnUser(userId), //Узнаём подписанны мы или нет\r\n        isFollow                = getFollowStateResponse.data,\r\n        response;\r\n\r\n    if (isFollow) response = await usersApi.unFollowOnUser(userId); //Если подписанны отписываемся\r\n    else response = await usersApi.followOnUser(userId); //Если не подписанны подписываемся\r\n    \r\n    if (response.data.resultCode === 0) dispatch(toggleSubscribeOnUserAC(userId)); //Если всё хорошо меняем store\r\n    dispatch(toggleUserToStackSubscribe(userId, false)); //Удаляем пользователя в очередь на подписку\r\n};\r\n\r\n\r\nexport const getFilterUsersThunkCallback = inpuntName => async (dispatch, getState) => { //Получить пользователей в соответствии с фильтром \r\n    let usersFilterObj = plunkRadioObject(getState().usersPage.propertiesFindByFilter, inpuntName);\r\n    dispatch(setPropertiesFindByFilterAC(usersFilterObj));\r\n    switch(inpuntName) {\r\n        case \"allUsers\":\r\n            dispatch(setFriendPropertyAC(\"\"));\r\n            break;\r\n        case \"onlyFriends\":\r\n            dispatch(setFriendPropertyAC(true));\r\n            break;\r\n        case \"notFriends\":\r\n            dispatch(setFriendPropertyAC(false));\r\n            break;\r\n    }\r\n    dispatch(getUsersThunkCallback());\r\n};\r\n\r\n\r\n\r\nexport default usersReducer;","export const getUserCard                    = state => state.profilePage.userCard;\r\nexport const isInitialized                  = state => state.profilePage.isInitialized;\r\nexport const getUserStatus                  = state => state.profilePage.userStatus;\r\nexport const isUserCheck                    = state => state.profilePage.isUserCheck;\r\nexport const getItsMe                       = state => state.profilePage.itsMe;\r\n\r\n//AuthReducer\r\nexport const getAuthStateUserSelector       = state => state.authPage.isAuth;\r\nexport const getCapthcaUrl                  = state => state.authPage.captchaUrl;\r\n\r\n//UsersPage\r\nexport const getUsersList                   = state => state.usersPage.items;\r\nexport const getTotalCount                  = state => state.usersPage.totalCount;\r\nexport const getCountUsers                  = state => state.usersPage.countUsers;\r\nexport const getUsersProcessingSubscribe    = state => state.usersPage.usersProcessingSubscribe;\r\nexport const getCurrentPage                 = state => state.usersPage.currentPage;\r\n\r\n","import React from \"react\";\r\nimport Users from \"./Users.jsx\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsersThunkCallback, toggleFollowThunkCallback, setFindUserAC, setCurrentPageAC, getFilterUsersThunkCallback } from \"../../Redux/users-reducer\";\r\nimport { getUsersList, getTotalCount, getCountUsers, getUsersProcessingSubscribe, getCurrentPage } from \"../../utils/selectors.js\";\r\nimport Preloader from \"../common/Preloader/Preloader.js\";\r\n\r\nlet mapStateToProps = state => ({\r\n    users: getUsersList(state),\r\n    totalCount: getTotalCount(state),\r\n    countUsers: getCountUsers(state),\r\n    usersProcessingSubscribe: getUsersProcessingSubscribe(state),\r\n    currentPage: getCurrentPage(state),\r\n    findUserState: state.usersPage.findUser,\r\n    propertiesFindByFilter: state.usersPage.propertiesFindByFilter,\r\n    usersPreloader: state.usersPage.usersPreloader\r\n});\r\n\r\nclass UsersContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.getUsersThunkCallback();\r\n    }\r\n\r\n    changeCurrentPage = (pageNum) => { //Переход на другую страницу пользователей\r\n        this.props.getUsersThunkCallback(pageNum);\r\n    }\r\n\r\n    searchPeople = () => { //Поиск пользователя по имени\r\n        this.props.setCurrentPageAC(1);\r\n        this.props.getUsersThunkCallback();\r\n    }\r\n\r\n    toggleFollow = userId => { //Подписаться или отписаться от другого пользователя\r\n        this.props.toggleFollowThunkCallback(userId)\r\n    }\r\n\r\n    getFilterUsers = inputName => {\r\n        this.props.getFilterUsersThunkCallback(inputName);\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <Users \r\n                    users={this.props.users}\r\n                    changeCurrentPage={this.changeCurrentPage}\r\n                    totalCount={this.props.totalCount}\r\n                    countUsers={this.props.countUsers}\r\n                    toggleFollow={this.toggleFollow}\r\n                    usersProcessingSubscribe={this.props.usersProcessingSubscribe}\r\n                    searchPeople={this.searchPeople} \r\n                    setFindUserAC={this.props.setFindUserAC}\r\n                    activePage={this.props.currentPage}\r\n                    setCurrentPageAC={this.props.setCurrentPageAC}\r\n                    findUserState={this.props.findUserState}\r\n                    propertiesFindByFilter={this.props.propertiesFindByFilter}\r\n                    getFilterUsers={this.getFilterUsers}\r\n                    myId={this.props.myId}\r\n                    usersPreloader={this.props.usersPreloader}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersThunkCallback, toggleFollowThunkCallback, setFindUserAC, setCurrentPageAC, getFilterUsersThunkCallback})\r\n)(UsersContainer);\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Dialogs = props => {\r\n    return(\r\n        <div>\r\n            Dialogs\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React, {useState} from 'react';\r\nimport s from './LargeAvatar.module.scss';\r\nimport defaultUser from '../../assets/images/default-user.jpg';\r\nimport cn from 'classnames';\r\n\r\nclass LargeAvatar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPreload: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) { //Когда отправили запрос на изменение картинки показываем preloader\r\n        if (prevProps !== this.props) {\r\n            this.setState({isPreload: false});\r\n            return true;\r\n        }\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({isPreload: true});\r\n        if (e.target.files.length > 0) {\r\n            this.props.setNewProfilePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let editBtn = (<div className={s.overlay}>\r\n            <div className={s.wrapForInput}>\r\n                <label className={s.label} htmlFor=\"file\">Edit</label>\r\n                <input type=\"file\" id=\"file\" onChange={this.handleInput}/>\r\n            </div>\r\n        </div>);\r\n\r\n        if (this.state.isPreload) {\r\n            return<div className={s.avatar}>\r\n                <div>Load...</div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div className={s.avatar}>\r\n                <img src={this.props.src || defaultUser} alt=\"avatar\"/>\r\n                {this.props.itsMe && editBtn}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LargeAvatar;","import React, {useEffect, useState} from 'react';\r\nimport s from './UserStatus.module.scss';\r\n\r\nconst UserStatus = React.memo(props => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [statusText, setStatusText] = useState(props.status);\r\n\r\n    let onEditMode = () => {\r\n        if (props.itsMe) {\r\n            setEditMode(true);\r\n        }\r\n    };\r\n    let offEditMode = (e) => {\r\n        setEditMode(false);\r\n        if (props.status !== statusText) props.changeUserStatus(statusText);\r\n    };\r\n    let handleInput = (e) => {\r\n        setStatusText(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatusText(props.status)\r\n    }, [props.status])\r\n\r\n    if (!editMode) return<div className={s.section} onDoubleClick={onEditMode}>{statusText || setStatusText('SET STATUS')}</div>\r\n    else return<input type=\"text\" value={statusText} onChange={handleInput} onBlur={offEditMode} autoFocus className={s.input}/>\r\n});\r\n\r\nexport default UserStatus;","import React from 'react';\r\nimport s from './UserAbout.module.scss';\r\n\r\nconst UserAbout = props => {\r\n    return (\r\n        <div className={s.section}>\r\n            <h3 className={s.name}>\r\n                <span>I`m</span> {props.fullName}\r\n            </h3>\r\n            <p className={s.about}>\r\n                {props.aboutMe || 'User not tell about yourself'}\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default UserAbout;","import React from \"react\";\r\nimport s from \"./SocialBlock.module.scss\";\r\n\r\nconst SocialBlock = props => {\r\n    function getSocialArray(obj) {\r\n        let result = [];\r\n        let i = 0;\r\n        for (let key in obj) {\r\n            if (obj[key] !== null && obj[key] !== \"\") {\r\n                switch (key) {\r\n                    case 'facebook':\r\n                        result.push(<li key={i++}><a href={`${obj[key]}`}><i className={`fa fa-facebook`}></i></a></li>);\r\n                        break;\r\n                    case 'website':\r\n                        result.push(<li key={i++}><a href={`${obj[key]}`}><i className={`fa fa-desktop`}></i></a></li>);\r\n                        break;\r\n                    case 'vk':\r\n                        result.push(<li key={i++}><a href={`${obj[key]}`}><i className={`fa fa-vk`}></i></a></li>);\r\n                        break;\r\n                    case 'twitter':\r\n                        result.push(<li key={i++}><a href={`${obj[key]}`}><i className={`fa fa-twitter`}></i></a></li>);\r\n                        break;\r\n                    case 'instagram':\r\n                        result.push(<li key={i++}><a href={`${obj[key]}`}><i className={`fa fa-instagram`}></i></a></li>);\r\n                        break;\r\n                    case 'youtube':\r\n                        result.push(<li key={i++}><a href={`${obj[key]}`}><i className={`fa fa-youtube-play`}></i></a></li>);\r\n                        break;\r\n                    case 'github':\r\n                        result.push(<li key={i++}><a href={`${obj[key]}`}><i className={`fa fa-github`}></i></a></li>);\r\n                        break;\r\n                    case 'mainLink':\r\n                        result.push(<li key={i++}><a href={`${obj[key]}`}><i className={`fa fa-address-book-o`}></i></a></li>);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    let socialList = getSocialArray(props.contacts);\r\n\r\n    return (\r\n        <ul className={s.section}>\r\n            {socialList.length > 0 ? socialList : 'Not social links'}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default SocialBlock;","import React from 'react';\r\nimport s from './VerifyElem.module.scss';\r\n\r\n\r\nconst VerifyElem = props => {\r\n\r\n    return(\r\n        <div className={s.section}>\r\n\r\n            {props.text}: {props.verify\r\n                ? <span className={s.check}><i className={`fa fa-check-circle`}></i></span>\r\n                : <span className={s.fail}><i className={`fa fa-window-close`}></i></span>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default VerifyElem;","import React from \"react\";\r\nimport s from \"./FormControls.module.css\";\r\n\r\nconst createCustomField = Component => ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl + ` ` + (hasError ? s.error : ``) }>\r\n            <div>\r\n                <Component {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport const CustomInput = createCustomField(\"input\");\r\nexport const CustomTextarea = createCustomField(\"textarea\");","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {CustomInput, CustomTextarea} from \"../../../common/FormControls/FormControls\";\r\nimport s from \"./EditProfileForm.module.css\"\r\n\r\nconst ErrorWrap = props => {\r\n    let listError = props.error.map((e, i) => {\r\n       return <div key={i}>{e}</div>\r\n    });\r\n    return(\r\n        <ul className={s.error}>\r\n            {listError}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst EditProfileForm = props => {\r\n    let {vk, youtube, facebook,\r\n        github, instagram, mainLink,\r\n        twitter, website} = props.initialValues.contacts;\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <h2>\r\n                Edit Profile\r\n            </h2>\r\n            <Field component={CustomInput} placeholder={\"FullName\"} name={\"fullName\"}/>\r\n            <Field component={CustomTextarea} placeholder={\"AboutMe\"} name={\"aboutMe\"}/>\r\n            <div>\r\n                <label htmlFor=\"lookingForAJob\" htmlFor={\"lookingForAJob\"}>lookingForAJob</label>\r\n                <Field component={CustomInput} placeholder={\"lookingForAJob\"} type={\"checkbox\"} id={\"lookingForAJob\"} name={\"lookingForAJob\"}/>\r\n            </div>\r\n            <Field component={CustomTextarea} placeholder={\"lookingForAJobDescription\"} name={\"lookingForAJobDescription\"}/>\r\n            <div>\r\n                <h3>Contacts:</h3>\r\n                <div>\r\n                    <Field component={CustomInput} placeholder={\"github\"} name={\"contacts.github\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={CustomInput} placeholder={\"vk\"} name={\"contacts.vk\"}/>\r\n                </div>\r\n                <div><Field component={CustomInput} placeholder={\"facebook\"} name={\"contacts.facebook\"}/></div>\r\n                <div>\r\n                    <Field component={CustomInput} placeholder={\"instagram\"} name={\"contacts.instagram\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={CustomInput} placeholder={\"twitter\"} name={\"contacts.twitter\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={CustomInput} placeholder={\"website\"} name={\"contacts.website\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={CustomInput} placeholder={\"youtube\"} name={\"contacts.youtube\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field component={CustomInput} placeholder={\"mainLink\"} name={\"contacts.mainLink\"}/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <button>Send</button>\r\n            {props.error && <ErrorWrap error={props.error}/>}\r\n        </form>\r\n    )\r\n}\r\n\r\n/*\r\nfullName: required(string)\r\naboutMe: required(integer)\r\nlookingForAJob:\r\nlookingForAJobDescription: required(string)\r\ncontacts:\r\n    github: required(string)\r\n    vk: required(string)\r\n    facebook: required(string)\r\n    instagram: required(string)\r\n    twitter: required(string)\r\n    website: required(string)\r\n    youtube: required(string)\r\n    mainLink: required(string)\r\n*/\r\n\r\n\r\nexport default reduxForm({form: \"edit-profile\"})(EditProfileForm);","import React, {useState} from \"react\";\r\nimport s from \"./EditProfileCard.module.scss\";\r\nimport EditProfileForm from \"./EditProfileForm/EditProfileForm\";\r\n\r\nconst EditProfileCard = props => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    let onSubmit = formData => {\r\n        let contacts = {\r\n            vk: formData.contacts.vk,\r\n            youtube: formData.contacts.youtube,\r\n            facebook: formData.contacts.facebook,\r\n            github: formData.contacts.github,\r\n            instagram: formData.contacts.instagram,\r\n            mainLink: formData.contacts.mainLink,\r\n            twitter: formData.contacts.twitter,\r\n            website: formData.contacts.website\r\n        };\r\n        let promise = props.sendEditProfileData({...formData, contacts});\r\n        promise.then(\r\n            () => setEditMode(false),\r\n            () => setEditMode(true)\r\n        )\r\n    }\r\n\r\n    let currentElement = <button onClick={() => setEditMode(true)}>Edit Profile</button>;\r\n\r\n    if (editMode) {\r\n        currentElement = (\r\n            <EditProfileForm onSubmit={onSubmit} initialValues={props}/>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className={s.editProfileWrap}>\r\n            {currentElement}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditProfileCard;\r\n\r\n","import React from 'react';\r\nimport s from './UserCard.module.scss';\r\nimport LargeAvatar from \"../../LargeAvatar/LargeAvatar\";\r\nimport UserStatus from \"../../common/UserStatus/UserStatus\";\r\nimport UserAbout from \"../../common/UserAbout/UserAbout\";\r\nimport SocialBlock from \"../SocialBlock/SocialBlock\";\r\nimport VerifyElem from \"../../common/VerifyElem/VerifyElem\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport EditProfileCard from \"../ChangeProfile/EditProfileCard\";\r\n\r\nconst UserCard = React.memo(props => {\r\n    let {aboutMe, contacts, lookingForAJob, lookingForAJobDescription, fullName, userId, photos} = props.userData;\r\n\r\n    return(\r\n        <div className={s.section}>\r\n            <div className={s.avatar}>\r\n                <LargeAvatar src={photos.large} setNewProfilePhoto={props.setNewProfilePhoto} itsMe={props.itsMe}/>\r\n            </div>\r\n            <div className={s.infoWrap}>\r\n                <div className={s.info}>\r\n                    <UserStatus status={props.status} changeUserStatus={props.changeUserStatus} itsMe={props.itsMe}/>\r\n                    <UserAbout aboutMe={aboutMe} fullName={fullName}/>\r\n                </div>\r\n                <VerifyElem text={'Looking for a job'} verify={lookingForAJob}/>\r\n                <p>Looking for a job description: {lookingForAJobDescription}</p>\r\n                {props.itsMe && <EditProfileCard sendEditProfileData={props.sendEditProfileData} {...props.userData}/>}\r\n            </div>\r\n\r\n            <SocialBlock contacts={contacts}/>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default UserCard;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport UserCard from \"./UserCard/UserCard\";\r\n\r\nconst Profile = React.memo(props => {\r\n    let userData = {...props.userCard};\r\n    if (props.isUserCheck) {\r\n        return(\r\n            <div>\r\n                <UserCard\r\n                    userData={userData}\r\n                    status={props.status}\r\n                    changeUserStatus={props.changeUserStatus}\r\n                    setNewProfilePhoto={props.setNewProfilePhoto}\r\n                    sendEditProfileData={props.sendEditProfileData}\r\n                    itsMe={props.itsMe}\r\n                />\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>Такого пользователя нет</div>\r\n    }\r\n\r\n});\r\n\r\n\r\nexport default Profile;","import {profileApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'bank-app/profile-reducer/SET_USER_DATA';\r\nconst SET_INITIALIZED = 'bank-app/profile-reducer/SET_INITIALIZED';\r\nconst SET_USER_STATUS = 'bank-app/profile-reducer/SET_USER_STATUS';\r\nconst SET_UNKNOWN_USER = 'bank-app/profile-reducer/SET_UNKNOWN_USER';\r\nconst SET_NEW_PHOTOS = 'bank-app/profile-reducer/SET_NEW_PHOTOS';\r\nconst ITS_ME = 'bank-app/auth-reducer/ITS_ME';\r\n\r\nlet initialState = {\r\n    isInitialized: false,\r\n    userStatus: '',\r\n    isUserCheck: false,\r\n    itsMe: false,\r\n    userCard: {\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null\r\n        },\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: null,\r\n        fullName: null,\r\n        userId: null,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userCard: {...action.dataFromApi}\r\n            }\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                isInitialized: action.bool\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                userStatus: action.userStatus\r\n            }\r\n        case SET_UNKNOWN_USER:\r\n            return {\r\n                ...state,\r\n                isUserCheck: action.bool\r\n            }\r\n        case SET_NEW_PHOTOS:\r\n            return {\r\n                ...state,\r\n                userCard: {\r\n                    ...state.userCard,\r\n                    photos: {...action.photos}\r\n                }\r\n            }\r\n        case ITS_ME:\r\n            return {\r\n                ...state,\r\n                itsMe: action.bool\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreators\r\nexport const setUserData = dataFromApi => ({type: SET_USER_DATA, dataFromApi});\r\nexport const setInitialized = bool => ({type: SET_INITIALIZED, bool});\r\nexport const setUserStatus = userStatus => ({type: SET_USER_STATUS, userStatus});\r\nexport const setUnknownUser = bool => ({type: SET_UNKNOWN_USER, bool});\r\nexport const setNewPhotoAC = photos => ({type: SET_NEW_PHOTOS, photos});\r\nexport const itsMeAC = bool => ({type: ITS_ME, bool}); //Установить данная страничка профиля моя или нет\r\n\r\n//ThunkCreators\r\nexport const getCurrentUserDataThunkCreator = userId => async (dispatch, getState) => {\r\n    let currentUserId = getState().authPage.userTechnicalData.id;\r\n    let resultId =  Number(userId || currentUserId);\r\n\r\n    if (resultId === currentUserId) {\r\n        dispatch(itsMeAC(true))\r\n    } else {\r\n        dispatch(itsMeAC(false))\r\n    }\r\n    dispatch(setInitialized(false));\r\n    let response = await profileApi.getUserData(resultId)\r\n    dispatch(setInitialized(true));\r\n    dispatch(setUserData(response.data));\r\n    dispatch(setUnknownUser(true))\r\n};\r\n\r\nexport const getUserStatusThunkCreator = userId => async (dispatch, getState) => {\r\n    let currentUserId = getState().authPage.userTechnicalData.id;\r\n    let resultId =  userId || currentUserId;\r\n    const response = await profileApi.getUserStatus(resultId);\r\n    dispatch(setUserStatus(response.data));\r\n};\r\n\r\nexport const setUserStatusThunkCreator = newStatusText => async dispatch => {\r\n    await profileApi.setUserStatus(newStatusText);\r\n    dispatch(setUserStatus(newStatusText));\r\n}\r\n\r\nexport const setNewProfilePhotoThunkCallback = photoFile => async dispatch => {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", photoFile);\r\n    let response = await profileApi.setNewProfilePhoto(formData);\r\n    console.log(\"1\");\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setNewPhotoAC(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const sendEditProfileDataThunkCallback = formData => async (dispatch, getState) => {\r\n    let userId = getState().profilePage.userCard.userId;\r\n    let response = await profileApi.setEditProfileData(formData);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getCurrentUserDataThunkCreator(userId));\r\n    } else if (response.data.resultCode === 1){\r\n        let messages = response.data.messages.length > 0 ? response.data.messages : 'UnknownError'\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: messages}));\r\n        return Promise.reject(messages);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getAuthStateUserSelector} from \"../utils/selectors\";\r\n\r\nlet mapStateToProps = state => ({\r\n    isAuth: getAuthStateUserSelector(state) //Использовать Selectors\r\n});\r\n\r\nexport const withLoginRedirect = Component => {\r\n\r\n\r\n    class RedirectComponent extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n        render() {\r\n            if(this.props.isAuth) return<Component {...this.props}/>\r\n            else return<Redirect to={'/login'}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(RedirectComponent)\r\n\r\n}\r\n\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCurrentUserDataThunkCreator, getUserStatusThunkCreator, setUserStatusThunkCreator,\r\n    setNewProfilePhotoThunkCallback, sendEditProfileDataThunkCallback} from \"../../Redux/profile-reducers\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getItsMe, getUserCard, getUserStatus, isInitialized, isUserCheck} from \"../../utils/selectors\";\r\nimport {withLoginRedirect} from \"../../hoc/withLoginRedirect\";\r\n\r\nlet mapStateToProps = state => ({\r\n    userCard: getUserCard(state),\r\n    isInitialized: isInitialized(state),\r\n    status: getUserStatus(state),\r\n    isUserCheck: isUserCheck(state),\r\n    itsMe: getItsMe(state)\r\n});\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.requestUserData()\r\n    }\r\n\r\n    requestUserData() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        this.props.getCurrentUserDataThunkCreator(userId);\r\n        this.props.getUserStatusThunkCreator(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.requestUserData();\r\n        }\r\n    }\r\n\r\n    changeUserStatus = (newStatus) => {\r\n        this.props.setUserStatusThunkCreator(newStatus);\r\n    }\r\n\r\n    setNewProfilePhoto = (photoFile) => { //Отправка новой фотографии пользователя\r\n        this.props.setNewProfilePhotoThunkCallback(photoFile);\r\n    }\r\n\r\n    sendEditProfileData = formData => { //Отправка новых данных пользователя\r\n        return this.props.sendEditProfileDataThunkCallback(formData);\r\n    }\r\n\r\n    render() {\r\n        console.log('Render');\r\n        if(!this.props.isInitialized) return <Preloader/>;\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    userCard={this.props.userCard}\r\n                    status={this.props.status}\r\n                    changeUserStatus={this.changeUserStatus}\r\n                    isUserCheck={this.props.isUserCheck}\r\n                    setNewProfilePhoto={this.setNewProfilePhoto}\r\n                    sendEditProfileData={this.sendEditProfileData}\r\n                    itsMe={this.props.itsMe}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getCurrentUserDataThunkCreator, getUserStatusThunkCreator, setUserStatusThunkCreator,\r\n        setNewProfilePhotoThunkCallback, sendEditProfileDataThunkCallback}),\r\n    withLoginRedirect,\r\n    withRouter\r\n)(ProfileContainer);","export const required = value => (value || typeof value === 'number' ? undefined : 'Required');\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must be ${min} characters or more` : undefined;\r\nexport const email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? 'Invalid email address'\r\n        : undefined;\r\n","import React from 'react';\r\nimport {compose} from \"redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport {CustomInput} from \"../../common/FormControls/FormControls\";\r\nimport {email, required} from \"../../../utils/validators\";\r\nimport s from \"./LoginForm.module.css\";\r\n\r\nconst CaptchaElem = props => {\r\n    return(\r\n        <>\r\n            <img src={props.captchaUrl} alt=\"captcha\"/>\r\n            <Field type=\"text\" name={\"captcha\"} component={CustomInput}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst LoginForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field  type=\"text\" name={\"email\"} placeholder={\"email\"} component={CustomInput} validate={[required, email]}/>\r\n            <Field  type=\"password\" name={\"password\"} placeholder={\"password\"} component={CustomInput} validate={[required]}/>\r\n            <Field type=\"checkbox\" name={\"rememberMe\"} component={CustomInput}/>\r\n            <Button value={\"Send\"}/>\r\n            {props.captchaUrl && <CaptchaElem captchaUrl={props.captchaUrl}/>}\r\n            {props.error\r\n                && <span className={s.error}>{props.error}</span>\r\n            }\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    reduxForm({form: 'login'})\r\n)(LoginForm);","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst TOGGLE_USER_AUTH = 'bank-app/auth-reducer/TOGGLE_USER_AUTH';\r\nconst SET_LOGIN_USER_DATA = 'bank-app/auth-reducer/SET_LOGIN_USER_DATA';\r\nconst SET_INITIALIZED = 'bank-app/auth-reducer/SET_INITIALIZED';\r\nconst LOGOUT_USER = 'bank-app/auth-reducer/LOGOUT_USER';\r\nconst GET_CAPTCHA = 'bank-app/auth-reducer/GET_CAPTCHA';\r\n\r\n\r\nlet initialState = {\r\n    isAuth: false, //Пользователь авторизован или нет,\r\n    userTechnicalData: {\r\n        id: null,\r\n        email: null,\r\n        login: null\r\n    },\r\n    initialized: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_USER_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.bool\r\n            }\r\n        case SET_LOGIN_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userTechnicalData: {...action.dataFromApi}\r\n            }\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: action.bool\r\n            }\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                userTechnicalData: {\r\n                    id: null,\r\n                    email: null,\r\n                    login: null\r\n                },\r\n                initialized: false\r\n            }\r\n        case GET_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreators\r\nexport const toggleUserAuthState = bool => ({type: TOGGLE_USER_AUTH, bool}); //Пользователь авторизован или нет\r\nexport const setLoginUserData = dataFromApi => ({type: SET_LOGIN_USER_DATA, dataFromApi}); //Установить логин, email, id пользователя\r\nexport const setInitializeAC = bool => ({type: SET_INITIALIZED, bool}); //Установить загрузилось прилож или нет значение\r\nexport const logoutUserAC = () => ({type: LOGOUT_USER}); //Установить загрузилось прилож или нет значение\r\nexport const setCaptchaUrlAC = captchaUrl => ({type: GET_CAPTCHA, captchaUrl}); //Установить ссылку на картинку капчи, дабы потом отобразить\r\n\r\n\r\n//ThunkCreators\r\nexport const getAuthUserThunkCallback = () => async dispatch => { // Узнать пользователь авторизован или нет\r\n    let response = await authApi.getAuthUser();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(toggleUserAuthState(true)); //Пользователь авторизован  = true\r\n        dispatch(setLoginUserData(response.data.data)); //Установливаем логин, email, id пользователя в state\r\n    }\r\n};\r\nexport const setUserLoginDataThunkCallback = (formData) => async dispatch => { //Пользователь хочет войти, (отправляем данные на сервер и получаем ответ)\r\n    dispatch(setInitializeAC(false));\r\n    let response = await authApi.setLoginUserData(formData);\r\n    dispatch(setInitializeAC(true));\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserThunkCallback())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Unknown error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n        if (response.data.resultCode === 10) {\r\n            let responseCaptchaUrl = await authApi.getCaptchaUrl();\r\n            dispatch(setCaptchaUrlAC(responseCaptchaUrl.data.url))\r\n        }\r\n    }\r\n};\r\n\r\nexport const getInitializedStateThunkCallback = () => async dispatch => { //Инициализация приложения завершена?\r\n    let promise = dispatch(getAuthUserThunkCallback());\r\n    Promise.all([promise]).then(\r\n        () => {\r\n            dispatch(setInitializeAC(true))\r\n            console.log('wow')\r\n        }\r\n    )\r\n};\r\n\r\nexport const logoutThunkCallback = () => async dispatch => { //Выйти из аккаунта\r\n    let response = await authApi.logoutUser();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(logoutUserAC())\r\n        dispatch(getAuthUserThunkCallback())\r\n        dispatch(setInitializeAC(true))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserLoginDataThunkCallback} from \"../../Redux/auth-reducer\";\r\nimport {getAuthStateUserSelector, getCapthcaUrl} from \"../../utils/selectors\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToProps = state => ({\r\n    captchaUrl: getCapthcaUrl(state)\r\n});\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        let onSubmit = (formData) => {\r\n            this.props.setUserLoginDataThunkCallback(formData)\r\n        }\r\n\r\n        if (this.props.isAuth) {\r\n            return <Redirect to={\"/profile\"} />\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <LoginForm onSubmit={onSubmit} captchaUrl={this.props.captchaUrl}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserLoginDataThunkCallback})\r\n)(LoginContainer);","import React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\n//Styles\nimport \"./App.scss\";\n//Components\nimport Preview from \"./components/common/Preview/Preview\";\nimport Header from \"./components/Header/Header\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport UsersContainer from \"./components/UsersContainer/UsersContainer\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport LoginContainer from \"./components/LoginContainer/LoginContainer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {\n    getInitializedStateThunkCallback, logoutThunkCallback,\n    setUserLoginDataThunkCallback\n} from \"./Redux/auth-reducer\";\nimport {getAuthStateUserSelector} from \"./utils/selectors\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\n\nlet mapStateToProps = state => ({\n    isAuth: getAuthStateUserSelector(state),\n    initialized: state.authPage.initialized,\n    login: state.authPage.userTechnicalData.login,\n    myId: state.authPage.userTechnicalData.id\n});\n\n\nclass App extends React.PureComponent {\n    componentDidMount() {\n        this.props.getInitializedStateThunkCallback();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props || prevState !== this.state) {\n            return true;\n        }\n    }\n\n    render() {\n        if(!this.props.initialized) return <Preloader/>;\n        return (\n            <div className=\"App\">\n                <Header isAuth={this.props.isAuth} login={this.props.login} logoutThunkCallback={this.props.logoutThunkCallback}/>\n                <Sidebar/>\n                <div className=\"content\">\n                    <Route path={'/users'} render={() => <UsersContainer myId={this.props.myId}/>}/>\n                    <Route path={'/dialogs'} render={() => <Dialogs/>}/>\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer isAuth={this.props.isAuth} />}/>\n                    <Route path={'/login'} render={() => <LoginContainer isAuth={this.props.isAuth}/>}/>\n                </div>\n                {/*<Preview/>*/}    \n            </div>\n        )\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {setUserLoginDataThunkCallback, getInitializedStateThunkCallback, logoutThunkCallback})\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducers\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport authReducer from \"./auth-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    authPage: authReducer,\r\n    usersPage: usersReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport store from './Redux/redux-store';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>\n    ,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"LargeAvatar_avatar__2GKzS\",\"overlay\":\"LargeAvatar_overlay__Da87J\",\"wrapForInput\":\"LargeAvatar_wrapForInput__1iVX5\",\"label\":\"LargeAvatar_label__MkvTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sidebar_section__3Y11I\",\"item\":\"Sidebar_item__fDWpc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"UserCard_section__2LYg0\",\"infoWrap\":\"UserCard_infoWrap__10AoD\",\"info\":\"UserCard_info__Ezunh\"};","module.exports = __webpack_public_path__ + \"static/media/default-user.6843ac29.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"UserAbout_name__WD23q\",\"about\":\"UserAbout_about__2cveV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"check\":\"VerifyElem_check__2IdGH\",\"fail\":\"VerifyElem_fail__QX0E-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"UserStatus_section__1Jzb-\",\"input\":\"UserStatus_input__1nivs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3hAmW\",\"error\":\"FormControls_error__wcfi2\"};"],"sourceRoot":""}